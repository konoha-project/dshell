New=37
ADD=47
Null=38
Import=32
Var=44
Break=16
LT=52
MINUS=64
Assert=15
Super=40
Throw=43
T__11=3
T__12=2
This=42
T__13=1
Try=41
IntLiteral=75
CommandName=82
Boolean=17
Extends=25
Void=45
StmtEnd=83
T__10=4
SUB=48
T__9=5
T__8=6
T__7=7
T__6=8
MUL=49
T__5=9
FloatLiteral=76
T__4=10
For=30
Do=23
WhileSpace=85
EQ=56
Float=29
NOT=66
StringLiteral=78
NE=57
AND=58
Class=20
XOR=60
If=31
NullLiteral=79
Finally=28
PLUS=63
INC=67
DIV_ASSIGN=73
In=33
Catch=18
BooleanLiteral=77
SUB_ASSIGN=71
SymbolName=80
Continue=19
ASSIGN=69
Int=34
Function=27
MUL_ASSIGN=72
T__3=11
BIT_NOT=65
ClassName=81
T__2=12
Export=26
Instanceof=35
T__1=13
T__0=14
COND_OR=62
ADD_ASSIGN=70
GE=55
Comment=84
Return=39
MOD=51
OR=59
DEC=68
COND_AND=61
Constructor=22
While=46
GT=53
DIV=50
MOD_ASSIGN=74
Command=21
Else=24
LE=54
Let=36
'import'=32
')'=11
'super'=40
'else'=24
'in'=33
'%'=51
'!'=66
'>'=53
'=='=56
'|'=59
'--'=68
'['=4
':'=3
'throw'=43
'.'=14
'this'=42
'*'=49
'&'=58
'export'=26
'break'=16
'<='=54
'try'=41
'if'=31
'}'=8
'extends'=25
'instanceof'=35
';'=5
'||'=62
'class'=20
'return'=39
'catch'=18
'continue'=19
'/'=50
'*='=72
'function'=27
'let'=36
'~'=65
']'=7
'assert'=15
'<'=52
'++'=67
'>='=55
'env'=2
'Map'=1
'boolean'=17
'var'=44
'/='=73
'command'=21
'Func'=12
','=13
'-='=71
'('=10
'do'=23
'int'=34
'constructor'=22
'[]'=9
'for'=30
'^'=60
'='=69
'&&'=61
'{'=6
'void'=45
'while'=46
'float'=29
'!='=57
'new'=37
'finally'=28
'%='=74
'+='=70
